class LRUCache {
    private int capability;
    private LinkedHashMap<Integer, Integer> cache;
    
    LRUCache(int cap) {
        this.capability = cap;
        this.cache = new LinkedHashMap<>(cap, 0.75f, true) {
            protected boolean removeEldestEntry(Map.Entry<Integer, Integer> eldest){
                return size() > capability;
            }
        };
    }

    public int get (int key ){
        return cache.getOrDefault(key, -1);
    }

        
    public  void put(int key, int value) {
      cache.put(key, value);
    }
}
