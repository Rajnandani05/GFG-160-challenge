// User function Template for Java

class Solution {
    public ArrayList<ArrayList<Integer>> nQueen(int n) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        backtrack(n, 0, new ArrayList<>(), new HashSet<>(), new HashSet<>(), new HashSet<>(), result);
        return result;
    }
    void backtrack(int n, int col, ArrayList<Integer> current, Set<Integer> rows, Set<Integer> diag1, Set<Integer> diag2, ArrayList<ArrayList<Integer>> result ){
        
        if(col == n){
            ArrayList<Integer> oneBased = new ArrayList<>();
            for (int r : current) oneBased.add(r + 1);
            result.add(oneBased);
            return;
        }
        for (int row = 0; row < n; row++) {
            if(rows.contains(row) || diag1.contains(row - col) || diag2.contains(row + col)){
                continue;
            }
            current.add(row);
            rows.add(row);
            diag1.add(row - col);
            diag2.add(row + col);
            backtrack(n, col + 1, current, rows, diag1, diag2, result);
            current.remove(current.size() - 1);
            rows.remove(row);
            diag1.remove(row - col);
            diag2.remove(row + col);
        }
    }
}
